image: docker:20.10.22
services:
  - docker:20.10.22-dind

variables:
  SCRIPT_NAMES: buildAffaires import reinject
  image_buildAffaires: $CI_REGISTRY/cour-de-cassation/openjustice-sder/build-affaires:$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA
  image_import: $CI_REGISTRY/cour-de-cassation/openjustice-sder/import:$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA
  image_reinject: $CI_REGISTRY/cour-de-cassation/openjustice-sder/reinject:$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA
  dev: dev
  re7: preprod
  master: prod

stages:
  - build
  - deploy

build_openjustice_sder:
  stage: build
  variables:
    HTTP_PROXY: $HTTP_PROXY_DEV
    HTTPS_PROXY: $HTTP_PROXY_DEV
  script:
    - echo $CI_JOB_TOKEN | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - |
      for script_name in $SCRIPT_NAMES; do
        echo $script_name
        docker_image=$(eval "echo \$image_$script_name")
        echo $docker_image
        docker build --build-arg script_name=$script_name --build-arg http_proxy=$HTTP_PROXY --build-arg https_proxy=$HTTPS_PROXY -t $docker_image .
        docker push $docker_image
      done
  only:
    - master
    - dev
    - re7
  tags:
    - docker

deploy_openjustice_sder:
  stage: deploy
  image: alpine/ansible:2.16.1
  variables:
    DOLLAR: $$
  script:
    - inventaire=$(eval "echo \$$CI_COMMIT_BRANCH")
    - mkdir /root/.ssh
    - cat $SSH_KEY > /root/.ssh/id_rsa
    - cat $KNOWN_HOSTS > /root/.ssh/known_hosts
    - chmod 600 /root/.ssh/id_rsa
    - chmod 600 /root/.ssh/known_hosts
    - |
      ansible-playbook \
            -e build_affaires_image=$image_buildAffaires \
            -e import_image=$image_import \
            -e reinject_image=$image_reinject \
            -i ansible/inventory/$inventaire.yml \
            ansible/deploy_application.yml --vault-password-file=$ANSIBLE_VAULT_PASS
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "re7"
      when: manual
    - if: $CI_COMMIT_BRANCH == "dev"
      when: manual
  tags:
    - docker
  dependencies:
    - build_openjustice_sder
